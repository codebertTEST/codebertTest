name: Auto PR with CodeBERT Analysis

on:
  push:
    branches-ignore:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  analyze-and-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch latest changes
        run: git fetch origin

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Restore pip cache
        uses: actions/cache/restore@v4
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
        env:
          PIP_CACHE_DIR: ~/.cache/pip

      - name: Save pip cache
        if: steps.pip-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          
      - name: Get changed files
        run: |
          git diff --name-only origin/main > changed_files.txt
          echo "üìÑ Changed files:"
          cat changed_files.txt

      - name: Run CodeBERT Analysis
        id: codebert
        run: |
          python codebert_analysis.py changed_files.txt
          echo "REPORT_FILENAME=codebert-report.log" >> $GITHUB_ENV

      - name: Extract PR Summary
        run: |
          sed -n '/\[\[SUMMARY]]/,/\[\[DETAILED FINDINGS]]/p' $REPORT_FILENAME | head -n -2 > pr-summary.log
          echo "Laporan lengkap tersedia di artifact" >> pr-summary.log

      - name: Create Pull Request (jika ada kerentanan)
        if: env.NO_VULN != 'true'
        run: |
          gh pr create \
            --base main \
            --head ${{ github.ref_name }} \
            --title "CodeBERT Analysis: ${{ github.ref_name }}" \
            --body-file pr-summary.log
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          
      - name: Auto-merge (jika aman)
        if: env.NO_VULN == 'true'
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          echo "‚öôÔ∏è Konfigurasi git..."
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

          echo "üß† Checkout branch main dan merge dari $GITHUB_REF_NAME"
          git checkout main
          git pull origin main
          git merge ${{ github.ref_name }} --allow-unrelated-histories

          echo "üöÄ Push hasil merge ke main"
          git push origin main

      - name: Upload Full Report
        uses: actions/upload-artifact@v4
        with:
          name: codebert-security-report
          path: ${{ env.REPORT_FILENAME }}
